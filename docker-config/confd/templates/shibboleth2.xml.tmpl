<!--
https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPConfiguration
-->

<SPConfig xmlns="urn:mace:shibboleth:2.0:native:sp:config" xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata"
          clockSkew="1800">

    <!-- The entityID is the name TestShib made for your SP. -->
    <ApplicationDefaults
            {{ $entity_id := getenv "ENTITY_ID" }}
            {{ if ne $entity_id "None" }}
            entityID="{{ $entity_id }}"
            {{ else }}
            {{ getv "CRIT ENTITY_ID required." }}
            {{ end }}
            REMOTE_USER="eppn"
            metadataAttributePrefix="Meta-"
            signing="true"
            signingAlg="http://www.w3.org/2001/04/xmldsig-more#rsa-sha256"
            {{ if getenv "AUTHN_CONTEXT_CLASS_REF" }} authnContextClassRef="{{ getenv "AUTHN_CONTEXT_CLASS_REF" }}" {{ end }}
            NameIDFormat="urn:oasis:names:tc:SAML:2.0:nameid-format:persistent"
            {{ if getenv "APPLICATION_DEFAULTS_ENCRYPTION" }} encryption="{{ getenv "APPLICATION_DEFAULTS_ENCRYPTION" }}" {{ end }}

    >

        <!-- You should use secure cookies if at all possible.  See cookieProps in this Wiki article. -->
        <!-- https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPSessions -->
        <Sessions lifetime="28800" timeout="3600" checkAddress="false" relayState="ss:mem" handlerSSL="false"
                  exportLocation="/GetAssertion" exportACL="127.0.0.1">

            <!-- Triggers a login request directly to the TestShib IdP. -->
            <!-- https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPServiceSSO -->
            {{ if getenv "DISCOVERY_URL" }}
            <SSO discoveryProtocol="SAMLDS" discoveryURL="{{ getenv "DISCOVERY_URL" }}">SAML2</SSO>
            {{ else if getenv "IDP_ENTITY_ID" }}
            <SSO entityID="{{ getenv "IDP_ENTITY_ID" }}">SAML2</SSO>
            {{ else }}
            {{ getv "CRIT One of IDP_ENTITY_ID and DISCOVERY_URL must be exists" }}
            {{ end }}

            <!-- SAML and local-only logout. -->
            <!-- https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPServiceLogout -->
            <Logout>SAML2 Local</Logout>

            <!--
                Handlers allow you to interact with the SP and gather more information.  Try them out!
                Attribute values received by the SP through SAML will be visible at:
                http://example.com/Shibboleth.sso/Session
            -->

            <!-- Extension service that generates "approximate" metadata based on SP configuration. -->
            <Handler type="MetadataGenerator" Location="/Metadata" signing="false"
               {{ if getenv "METADATA_NOSSL_ENDPOINTS" }}
               http="true" https="false"
               {{ else }}
               http="false" https="true"
               {{ end }}
            />

            <!-- Status reporting service. -->
            <Handler type="Status" Location="/Status" acl="127.0.0.1"/>

            <!-- Session diagnostic service. -->
            <Handler type="Session" Location="/Session" showAttributeValues="true"/>

            <!-- JSON feed of discovery information. -->
            <Handler type="DiscoveryFeed" Location="/DiscoFeed"/>

        </Sessions>

        <!-- Error pages to display to yourself if something goes horribly wrong. -->
        <Errors supportContact="{{ getenv "SUPPORT_CONTACT" }}" logoLocation="/shibboleth-sp/logo.jpg"
                styleSheet="/shibboleth-sp/main.css"/>

        <!-- Loads and trusts a metadata file that describes only the Testshib IdP and how to communicate with it. -->
        <MetadataProvider type="Chaining">
          {{ $xml_metadata_provider := getenv "XML_METADATA_PROVIDER" }}
          {{ $dynamic_metadata_provider := getenv "DYNAMIC_METADATA_PROVIDER" }}
          {{ if ne $xml_metadata_provider "None" }}
          <MetadataProvider type="XML" url="{{ getenv "XML_METADATA_PROVIDER" }}" reloadInterval="1800">
          <!--<MetadataFilter type=\"Signature\" certificate=\"href-metadata-signer-2011.crt\"/>-->
          </MetadataProvider> 
          {{ else if ne $dynamic_metadata_provider "None" }}
          <MetadataProvider type="Dynamic" ignoreTransport="true">
            <Subst>{{ $dynamic_metadata_provider }}\$entityID</Subst>
            <!--<MetadataFilter type=\"Signature\" certificate=\"mdx-test-signer-2015.crt\"/>-->
          </MetadataProvider>
          {{ else }}
            {{ getv "CRIT One of XML_METADATA_PROVIDER and DYNAMIC_METADATA_PROVIDER must be exists" }}
          {{ end }}

        </MetadataProvider>


        <!-- Attribute and trust options you shouldn't need to change. -->
        <AttributeExtractor type="XML" validate="true" path="attribute-configs/attribute-map.xml"/>
        <AttributeExtractor type="Metadata" errorURL="errorURL" DisplayName="displayName"
                            InformationURL="informationURL" PrivacyStatementURL="privacyStatementURL"
                            OrganizationURL="organizationURL">
            <ContactPerson id="Support-Contact" contactType="support" formatter="$EmailAddress"/>
            <Logo id="Small-Logo" height="16" width="16" formatter="$_string"/>
        </AttributeExtractor>

        <AttributeResolver type="Chaining">
            <AttributeResolver type="Query"/>
            {{ getenv "ATTRIBUTE_RESOLVERS" }}
        </AttributeResolver>

        <AttributeFilter type="XML" validate="true" path="attribute-configs/attribute-policy.xml"/>

        <!-- Your SP generated these credentials.  They're used to talk to IdP's. -->
        <CredentialResolver type="File" key="cert/server.key.pem" certificate="cert/server.crt.pem"/>

    </ApplicationDefaults>

    <!-- Security policies you shouldn't change unless you know what you're doing. -->
    <SecurityPolicyProvider type="XML" validate="true" path="security-policy.xml"/>

    <!-- Low-level configuration about protocols and bindings available for use. -->
    <ProtocolProvider type="XML" validate="true" reloadChanges="false" path="protocols.xml"/>

</SPConfig>
